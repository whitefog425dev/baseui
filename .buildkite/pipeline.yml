steps:
  # Build the image in a single place for all parallel steps to leverage the same image.
  - name: ':docker: :package: unit'
    plugins:
      'docker-compose':
        build: baseui
        image-repository: 027047743804.dkr.ecr.us-east-2.amazonaws.com/uber
    agents:
      queue: builders
  - name: ':docker: :package: e2e'
    plugins:
      'docker-compose':
        build:
          - e2e-test-chrome
          - e2e-server
          - e2e-server-healthy
        image-repository: 027047743804.dkr.ecr.us-east-2.amazonaws.com/uber
    agents:
      queue: builders
  # Wait until all images are built.
  # This way we can download the built image from a registry instead of building each for each test task.
  - wait
  # All of the commands after the wait are run in parallel.
  - name: ':eslint:'
    command: yarn lint
    plugins:
      'docker-compose':
        run: baseui
    agents:
      queue: workers
  - name: ':flowtype:'
    command: yarn flow check
    plugins:
      'docker-compose':
        run: baseui
    agents:
      queue: workers
  - name: ':jest:'
    command: yarn unit-test
    plugins:
      'docker-compose':
        run: baseui
    agents:
      queue: workers
  - name: ':screener:'
    command: yarn storybook:screener:ci
    plugins:
      'docker-compose':
        run: baseui
    agents:
      queue: workers
  - name: ':saucelabs: :selenium:'
    command: yarn e2e:test:ci
    plugins:
      'docker-compose':
        run: e2e-test
        pull:
          - e2e-server
          - e2e-server-healthy
          - sauce-tunnel
          - sauce-tunnel-healthy
    agents:
      queue: workers
